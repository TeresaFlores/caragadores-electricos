{"version":3,"sources":["components/toggle.js","views/Notificaciones.js","views/Alexa.js","components/LocateControl.js","views/Mapa.js","components/Navigation.js","views/Historial.js","views/Historial1.js","views/Historial2.js","views/Historial3.js","views/TypePlugs.js","views/LectorQr.js","App.js","serviceWorker.js","index.js"],"names":["Toggle","state","checked","handleChange","bind","this","setState","htmlFor","onChange","onColor","onHandleColor","handleDiameter","uncheckedIcon","checkedIcon","boxShadow","activeBoxShadow","height","width","className","id","Component","Notificaciones","name","value","selected","React","ServicioVoz","LocateControl","props","options","startDirectly","map","leaflet","lc","Locate","addTo","start","withLeaflet","Mapa","lat","lng","data","zoom","cheked","e","target","filter","center","Map","TileLayer","attribution","url","marcador","Marker","position","geolocation","latitude","longitude","key","Popup","strings","title","onActivate","data-toggle","type","autocomplete","to","Historial","historial1","historial2","historial3","placeholder","class","Historial1","Historial2","Historial3","TypePlugs","pageWrapId","outerContainerId","index","plug_type","LectorQr","delay","result","handleScan","handleError","err","console","log","prevProps","prevState","style","onError","onScan","App","basename","window","location","pathname","path","exact","component","Alexa","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.fef6e1bb.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport Switch from \"react-switch\";\n\nclass Toggle extends Component {\n    constructor() {\n        super();\n        this.state = { checked: false };\n        this.handleChange = this.handleChange.bind(this);\n    }\n\n    handleChange(checked) {\n        this.setState({ checked });\n    }\n\n    render() {\n        return (\n            <label htmlFor=\"normal-switch\">\n                <Switch\n                    onChange={this.handleChange}\n                    checked={this.state.checked}\n                    onColor=\"#86d3ff\"\n                    onHandleColor=\"#2693e6\"\n                    handleDiameter={30}\n                    uncheckedIcon={false}\n                    checkedIcon={false}\n                    boxShadow=\"0px 1px 5px rgba(0, 0, 0, 0.6)\"\n                    activeBoxShadow=\"0px 0px 1px 10px rgba(0, 0, 0, 0.2)\"\n                    height={20}\n                    width={48}\n                    className=\"react-switch\"\n                    id=\"material-switch\"\n                />\n            </label>\n        );\n    }\n}\nexport default Toggle;","import React from 'react';\nimport Toggle from '../components/toggle';\nimport '../styles/Notificaciones.css';\n\n\nclass Notificaciones extends React.Component {\n    \n    render (){\n    \n        return(\n            <div className=\"container-Noti\">\n                \n\n            <div className=\"texto-noti\">\n                <div className=\"secciones\">\n                    <p>Activar notificaciones tiempo.\n                        Avisarme minutos antes que se acabe la bateria.</p>\n                    \n                    <Toggle /> \n                </div>\n                <div className=\"selec-noti\">\n                    <select name=\"Tiempo\" className=\"btn\" id=\"selec\">\n                        <option value=\"value2\" selected>TIEMPO</option>\n                        <option value=\"value1\">30 min</option> \n                        <option value=\"value1\">40 min</option> \n                        <option value=\"value3\">1 hr</option>\n                        <option value=\"value3\">1.3 hr</option>\n                        <option value=\"value3\">2 hr</option>\n                    </select>\n                </div>\n            \n            </div>\n\n\n\n            <div className=\"texto-noti\">\n                <div className=\"secciones\">\n                    <p>Activar notificaciones bateria.\n                    Avisarme cuando quede cierto porcentaje de la bateria.  </p>\n\n                    <Toggle /> \n                </div>\n\n                <div className=\"selec-noti\">\n                    <select name=\"Porcentaje\" className=\"btn\" id=\"selec\">\n                           <option value=\"value2\" selected>Porcentaje</option>\n                        <option value=\"value1\">30%</option> \n                        <option value=\"value3\">40%</option>\n                        <option value=\"value3\">50%</option>\n                    </select>\n                </div>\n             </div>   \n\n            \n        </div>  \n        );\n    }\n}\nexport default Notificaciones;","import React from 'react';\nimport Toggle from '../components/toggle';\nimport '../styles/Alexa.css';\n\nclass ServicioVoz extends React.Component{\nrender () {\n    return(\n\n        <div className=\"container\"> \n            {/* <h1>Alexa</h1> */}\n            <p>En Voltio Station, pensamos siempre en ti. Por ello te traemos a Alexa \n                el asistente virtual que quiere hacerte la vida más fácil.</p>\n\n                <p>Ahora es tan fácil como ir manejando y decir: Alexa,  ¿cuál es el cargador \n                más cercano? Para que Alexa con ayuda de nosotros te indique la dirección. </p>\n                \n            <div className=\"Alexa-toggle\">\n                <p>Activar Alexa</p>\n                <Toggle />\n            </div>    \n           \n         </div>\n    );\n}\n}\nexport default ServicioVoz;","import { Component } from \"react\";\nimport { withLeaflet } from \"react-leaflet\";\nimport Locate from \"leaflet.locatecontrol\";\n\nclass LocateControl extends Component {\n  componentDidMount() {\n    const { options, startDirectly } = this.props;\n    const { map } = this.props.leaflet;\n\n    const lc = new Locate(options);\n    lc.addTo(map);\n\n    if (startDirectly) {\n      // request location update and set location\n      lc.start();\n    }\n  }\n\n  render() {\n    return null;\n  }\n}\n\nexport default withLeaflet(LocateControl);","import React, { Component } from 'react'\nimport { Map, TileLayer, Marker, Popup } from 'react-leaflet'\nimport { data } from '../data.json'\nimport LocateControl from '../components/LocateControl'\n\nexport default class Mapa extends Component {\n    state = {\n        lat: 21.87982,\n        lng: -102.296,\n        data: data,\n        zoom: 5,\n        cheked: null\n      }\n\n\n    handleChange = (e) => {\n        const name = e.target.name\n        this.setState({\n            data: data.filter(state => state.state === name),\n            cheked: true ? false : true\n        })\n\n    }\n        \n    \n    render() {\n        const center = [this.state.lat, this.state.lng]\n        const locateOptions = {\n            position: 'topright',\n            strings: {\n                title: 'Show me where I am, yo!'\n            },\n            onActivate: () => {\n            } // callback before engine starts retrieving locations\n        }\n        return (\n            <div className=\"container-map\">\n                <Map center={center} zoom={this.state.zoom}>\n                    <TileLayer\n                        attribution='&amp;copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n                        url=\"https://maps.wikimedia.org/osm-intl/{z}/{x}/{y}.png\"\n                    />\n                    {\n                        this.state.data.map(marcador =>\n                            <Marker position={[marcador.geolocation.latitude, marcador.geolocation.longitude]} key={marcador.id}>\n                                <Popup>\n                                    {marcador.state}\n                                </Popup>\n                            </Marker>\n                        )\n                    }\n                    <LocateControl options={locateOptions} startDirectly />\n                </Map>\n                <div className=\"btn-group btn-group-toggle\" data-toggle=\"buttons\">\n                    <label className=\"btn btn-secondary active\">\n                        <input type=\"radio\" name=\"free\" id=\"option1\" autocomplete=\"off\" checked={this.state.cheked} onChange={this.handleChange}/> Disponible\n                    </label>\n                    <label className=\"btn btn-secondary\">\n                        <input type=\"radio\" name=\"busy\" id=\"option2\" autocomplete=\"off\" checked={this.state.cheked} onChange={this.handleChange}/> Ocupado\n                    </label>\n                </div>\n               \n            </div>\n        );\n    }\n}","import React from \"react\";\nimport { slide as Menu } from \"react-burger-menu\";\nimport { Link } from 'react-router-dom';\n\nimport './Navigation.css'\n\nexport default props => {\n  return (\n    <Menu className = \"menu\" {...props}>\n      <li className=\"nav-item\">\n        <Link to=\"/Cargadores\" className=\"nav-link\">\n          Tipo de conexión\n        </Link>\n      </li>\n      <li className=\"nav-item\">\n        <Link to=\"/\" className=\"nav-link\">\n          Reservas\n      </Link>\n      </li>\n      <li className=\"nav-item\">\n        <Link to=\"/Alexa\" className=\"nav-link\">\n          Alexa\n     </Link>\n      </li>\n      <li className=\"nav-item\">\n        <Link to=\"/Notificaciones\" className=\"nav-link\">\n          Notificaciones\n      </Link>\n      </li>\n      <li className=\"nav-item\">\n        <Link to=\"/Historial\" className=\"nav-link\">\n          Historial de Cargas\n      </Link>\n      </li>\n      <li className=\"nav-item\">\n        <Link to=\"/Qr\" className=\"nav-link\">\n          Lector QR\n      </Link>\n      </li>\n    </Menu>\n  );\n};\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport '../styles/Historial.css';\n\n\nclass Historial extends React.Component {\n    constructor (props){\n        super(props) \n            this.state={\n                historial1:[\n                    \"Candelaria, Camp.\" , \n                    \"13-11-2019\"\n                    \n                ],\n  \n                historial2: [\n                    \"Hopelchén, Camp.\",\n                     \"8-11-2019\"\n                   \n                    \n              ],\n              historial3: [\n                    \"Carmen, Camp.\",\n                    \"4-11-2019\"\n                    \n\n              ]  \n        }\n    }\n    render (){\n        return(\n            <div className=\"container-historial\">\n               \n                <div className=\"contenedor-buscador\">\n                    <input type=\"search\" placeholder=\"Search\" className=\"buscador\"></input>\n                </div>    \n\n                <div className=\"Selec-historial\">\n                    <select name=\"Direccion\" className=\"btn-sm\" id=\"boton-selec\">\n                        <option value=\"value2\" selected>UBICACIÓN</option>\n                        <option value=\"value1\">Candelaria</option> \n                        <option value=\"value3\">Hopelchén</option>\n                        <option value=\"value3\">Carmen</option>\n                    </select>\n\n                    <select name=\"Fecha\" className=\"btn-sm\" id=\"boton-selec\">\n                        <option value=\"value2\" selected>FECHA</option>\n                        <option value=\"value1\">Más reciente</option> \n                        <option value=\"value3\">Más antiguo</option>\n                    </select>\n                </div>\n\n                {/* <h1>HISTORIAL</h1> */}\n\n                <Link to=\"/Historial1\">\n                    <div class=\"historial-links\">\n                        {this.state.historial1.map (historial1 => <p>{historial1}</p>)}  \n                    </div>\n                </Link>        \n\n                <Link to=\"/Historial2\">                \n                    <div  class=\"historial-links\">\n                    {this.state.historial2.map (historial2 => <p>{historial2}</p>)}   \n                    </div>\n                </Link>\n                    \n                <Link to=\"/Historial3\">\n                    <div  class=\"historial-links\">\n                       {this.state.historial3.map (historial3 => <p>{historial3}</p>)}    \n                    </div>\n                </Link>\n\n            </div>\n        );\n    }\n}\nexport default Historial;","import React from 'react';\nimport '../styles/Seccioneshistorial.css';\n\n\nclass Historial1 extends React.Component {\n    constructor (props){\n        super(props) \n            this.state={\n                historial1:[\n                    \"Fecha:13-11-2019\",\n                    \"Dirección:Calle 18 20-49, Centro, 24330 Candelaria, Camp.\",  \n                    \"Cargador:DC 35 kW\",\n                    \"Tiempo de carga: 45 minutos\",\n                    \"Costo:$25\",\n                    \"Pago: $1,125\"\n                ],\n  \n                historial2: [\n                    \"Fecha:8-11-2019\",\n                    \"Dirección:Calle 20, Centro, Hopelchén, Camp.\", \n                    \"Cargador:DC 35 kW\", \n                    \"Tiempo de carga:45 minutos\",\n                    \"Costo:$35\",\n                    \"Pago:$1,575\"\n              ],\n              historial3: [\n                    \"Fecha:4-11-2019\",\n                    \"Dirección:Calle 22 91, Centro, 24100 Cd del Carmen, Camp.\",  \n                    \"Cargador:DC 35 kW\",\n                    \"Tiempo de carga:30 minutos\",\n                    \"Costo:$35\",\n                    \"Pago:$1,050 \"\n              ]  \n        }\n    }\n    render (){\n        return(\n            <div className=\"container-SeccionesHistorial\">\n                <h4>Tesla S.A.</h4>\n                <div>   \n                {this.state.historial1.map (historial1 => <p>{historial1}</p>)}    \n                </div>\n    \n\n\n            </div>\n        );\n    }\n}\nexport default Historial1;","import React from 'react';\nimport '../styles/Seccioneshistorial.css';\n\nclass Historial2 extends React.Component {\n    constructor (props){\n        super(props) \n            this.state={\n                historial1:[\n                    \"Fecha:13-11-2019\",\n                    \"Dirección:Calle 18 20-49, Centro, 24330 Candelaria, Camp.\",  \n                    \"Cargador:DC 35 kW\",\n                    \"Tiempo de carga: 45 minutos\",\n                    \"Costo:$25\",\n                    \"Pago: $1,125\"\n                ],\n  \n                historial2: [\n                    \"Fecha:8-11-2019\",\n                    \"Dirección:Calle 20, Centro, Hopelchén, Camp.\", \n                    \"Cargador:DC 35 kW\", \n                    \"Tiempo de carga:45 minutos\",\n                    \"Costo:$35\",\n                    \"Pago:$1,575\"\n              ],\n              historial3: [\n                    \"Fecha:4-11-2019\",\n                    \"Dirección:Calle 22 91, Centro, 24100 Cd del Carmen, Camp.\",  \n                    \"Cargador:DC 35 kW\",\n                    \"Tiempo de carga:30 minutos\",\n                    \"Costo:$35\",\n                    \"Pago:$1,050 \"\n              ]  \n        }\n    }\n    render (){\n        return(\n            <div className=\"container-SeccionesHistorial\">\n                <h4>EV Chargers Mexico</h4>\n                <div>\n                    \n                {this.state.historial2.map (historial2 => <p>{historial2}</p>)}    \n\n               </div>\n\n\n            </div>\n        );\n    }\n}\nexport default Historial2;","import React from 'react';\nimport '../styles/Seccioneshistorial.css';\n\nclass Historial3 extends React.Component {\n    constructor (props){\n        super(props) \n            this.state={\n                historial1:[\n                    \"Fecha:13-11-2019\",\n                    \"Dirección:Calle 18 20-49, Centro, 24330 Candelaria, Camp.\",  \n                    \"Cargador:DC 35 kW\",\n                    \"Tiempo de carga: 45 minutos\",\n                    \"Costo:$25\",\n                    \"Pago: $1,125\"\n                ],\n  \n                historial2: [\n                    \"Fecha:8-11-2019\",\n                    \"Dirección:Calle 20, Centro, Hopelchén, Camp.\", \n                    \"Cargador:DC 35 kW\", \n                    \"Tiempo de carga:45 minutos\",\n                    \"Costo:$35\",\n                    \"Pago:$1,575\"\n              ],\n              historial3: [\n                    \"Fecha:4-11-2019\",\n                    \"Dirección:Calle 22 91, Centro, 24100 Cd del Carmen, Camp.\",  \n                    \"Cargador:DC 35 kW\",\n                    \"Tiempo de carga:30 minutos\",\n                    \"Costo:$35\",\n                    \"Pago:$1,050 \"\n              ]  \n        }\n    }\n    render (){\n        return(\n            <div className=\"container-SeccionesHistorial\">\n                <h4>EV Chargers Mexico</h4>\n                <div>\n                    \n                {this.state.historial3.map (historial3 => <p>{historial3}</p>)}    \n\n               </div>\n\n\n            </div>\n        );\n    }\n}\nexport default Historial3;","import { data } from '../data.json';\nimport React, { Component, Fragment } from 'react';\nimport Toggle from '../components/toggle'\nimport SideBar from '../components/Navigation';\nimport './TypePlugs.css'\n\nexport default class TypePlugs extends Component {\n    render() {\n        return (\n            <div className = \"container-type\">\n            <Fragment>\n\n                \n\n                <div id=\"TypePlugs\">\n                    <SideBar pageWrapId={\"page-wrap\"} outerContainerId={\"TypePlugs\"} />\n                </div>\n                <div>\n                    <div>\n                        <table className=\"table\">\n                            <thead>\n                                <tr>\n                                    <th>Tipo de cargador</th>\n                                    <th>Habilitar</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {data.map((data, index) => {\n                                    return (\n                                        <tr key={data.id}>\n                                            <td>{data.plug_type}</td>\n                                            <td><Toggle /></td>\n                                        </tr>\n                                    );\n                                })}\n\n                            </tbody>\n                        </table>\n                    </div>\n                </div>\n            </Fragment>\n            </div>\n        )\n    }\n}","import React, { Component } from 'react'\nimport QrReader from 'react-qr-scanner'\n\nexport default class LectorQr extends Component{\n    state = {\n        delay: 100,\n        result: ''\n    }\n\n    \n    componentDidUpdate(prevProps, prevState) {\n        if (prevState.result !== this.state.result) {\n            \n        }\n    }\n\n    handleScan = ( data ) =>{\n        this.setState({\n            result: data,\n        })\n    }\n\n    handleError = (err) =>{\n        console.log(err)\n    }\n\n    render(){\n        const previewStyle = {\n            height: 300,\n            width: 300\n        }\n    return(\n        <div className=\"container-qr\">\n            <QrReader\n                className=\"lector-qr\"\n                delay={this.state.delay}\n                style={previewStyle}\n                onError={this.handleError}\n                onScan={this.handleScan}\n            />\n            <h3>{this.state.result}</h3>\n        </div>\n    )\n    }\n}","import React from 'react';\nimport './App.css';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Notificaciones from './views/Notificaciones';\nimport Alexa from './views/Alexa';\nimport Mapa from './views/Mapa';\nimport Navigation from './components/Navigation';\nimport Historial from './views/Historial';\nimport Historial1 from './views/Historial1';\nimport Historial2 from './views/Historial2';\nimport Historial3 from './views/Historial3';\nimport TypePlugs from './views/TypePlugs';\nimport LectorQr from './views/LectorQr'\n\n\n\nfunction App() {\n  return (\n    <Router basename={window.location.pathname || \"\"}>\n      <div className=\"nav\">\n      <Navigation></Navigation>\n      </div>\n      <div className=\"container p-1 padre\">\n        <Route path=\"/\" exact component={Mapa}/>\n        <Route path=\"/Notificaciones\" component={Notificaciones}/>\n        <Route path=\"/Alexa\" component={Alexa}/>\n        <Route path=\"/Historial\" component={Historial}/>\n        <Route path=\"/Historial1\" component={Historial1}/>\n        <Route path=\"/Historial2\" component={Historial2}/>\n        <Route path=\"/Historial3\" component={Historial3}/>\n        <Route path=\"/Cargadores\" component={TypePlugs} />\n        <Route path=\"/Qr\" component={LectorQr} />\n        \n      </div>\n    </Router>\n  )\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}